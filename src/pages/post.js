import Head from "next/head";
import { Fragment } from "react";
import { InputText, InputNumber, InputTextArea } from "../components/InputForm";
import { Formik, Form } from "formik";
import * as Yup from "yup";
import axios from "axios";

const Post = () => {
  const validate = Yup.object({
    title: Yup.string()
      .min(3, "* Minimo 3 car치cteres")
      .max(100, "* No puede superar los 100 car치cteres")
      .required("* Requerido"),
    body: Yup.string()
      .min(3, "* Minimo 3 car치cteres")
      .max(254, "* No puede superar los 254 car치cteres")
      .required("* Requerido"),
  });

  const handleOnSubmit = async (values, setSubmitting) => {
    await axios
      .post("https://jsonplaceholder.typicode.com/posts", values)
      .then((response) => {
        if (response.status === 201) {
          console.log("Agregado", response.data);
          setSubmitting(false);
        }
      })
      .catch((err) => {
        console.log(err.response.status, err.response.statusText);
        setSubmitting(true);
      });
  };

  return (
    <Fragment>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="container">
        <div className="form">
          <div className="form__title">
            <span>Agregar Post</span>
          </div>
          <Formik
            initialValues={{
              title: "",
              body: "",
              userId: "",
            }}
            validationSchema={validate}
            onSubmit={(values, { setSubmitting }) =>
              handleOnSubmit(values, setSubmitting)
            }
          >
            {({ handleSubmit, isSubmitting, resetForm, setFieldValue }) => (
              <Form onSubmit={handleSubmit}>
                <div className="form__container">
                  <InputText name="title" title="Titulo" />
                  <InputTextArea
                    name="body"
                    title="Cuerpo"
                    setFieldValue={setFieldValue}
                  />
                  <InputNumber name="userId" title="ID Usuario" />
                </div>
                <div className="form__buttons">
                  <button
                    type="reset"
                    className="form__buttons-reset"
                    onClick={resetForm}
                  >
                    Limpiar
                  </button>
                  <button
                    type="submit"
                    className="form__buttons-submit"
                    disabled={isSubmitting}
                  >
                    Agregar
                  </button>
                </div>
              </Form>
            )}
          </Formik>
        </div>
      </div>
    </Fragment>
  );
};

export default Post;
